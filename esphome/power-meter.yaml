substitutions:
  name: power-meter
  friendly_name: Power Meter
  hostname: power-meter
  room: Office
  device_description: "Power Meter"
  framework: "esp-idf"

packages:
  device_base: !include common/qtpy_esp32_pico.yaml

spi: !remove


sensor:
  - platform: homeassistant
    name: Power
    id: power
    entity_id: sensor.main_panel_total_power
#    entity_id: sensor.mains_power_total
#    entity_id: sensor.meter_test_sensor
    unit_of_measurement: 'W'
    internal: true
    filters:
      - calibrate_polynomial:
          degree: 5
          datapoints:
            - 0.0 -> 0
            - 200 -> 400
            - 500 -> 990
            - 1300 -> 1980
            - 1500 -> 2205
            - 2000 -> 2715
            - 3000 -> 3600
            - 3500 -> 3975
            - 4000 -> 4310
            - 4500 -> 4630
            - 5000 -> 4925            
    on_value:
      then:
        - lambda: |-
            float pct = x / 5000;
            id(meter_output).set_level(pct);


  # - platform: template
  #   name: "Power Value"
  #   id: power_value
  #   lambda: return id(power).state;
  #   device_class: power
  #   update_interval: 1s
  #   unit_of_measurement: "W"
  #   entity_category: diagnostic
  #   internal: false



output:
  - platform: ledc
    pin: GPIO14
    id: meter_output
    frequency: 25000Hz

switch: 
  - platform: gpio
    id: meter_ground
    restore_mode: ALWAYS_OFF
    pin: GPIO33